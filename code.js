class PlotlyClass{constructor(){console.log("HERE new class"),this.plotInitialized_Line=!1,this.plotInitialized_Mesh=!1}documentCreateElement(t){var e=document.querySelector(".PlotlyContainer"),o=document.createElement("div");o.setAttribute("id",t),e.append(o)}plotLine(t,e,o){this.documentCreateElement(o);var i=[{x:t,y:e,mode:"lines+markers"}];Plotly.newPlot(o,i,{title:"Objective Function Vs Iteration",xaxis:{title:"Iteration",showgrid:!1,zeroline:!1},yaxis:{title:"Objective Function",showline:!1}})}plotMesh(t,e,o,i){this.documentCreateElement(i);for(var a=[],r=[],l=[],n=-50;n<100;n++)for(var s=-50;s<100;s++){var u=n*n+s*s;a.push(n),r.push(s),l.push(u)}var h=[{x:[1],y:[1],z:[1],mode:"markers",type:"scatter3d",marker:{color:"rgb(255, 0, 0)",size:5}},{opacity:.5,color:"rgb(0,255,255)",type:"mesh3d",x:a,y:r,z:l}];Plotly.newPlot(i,h,{autosize:!1,width:500,height:500})}animateLine(t,e,o){this.plotInitialized_Line||(this.plotLine([0],[0],o),this.plotInitialized_Line=!0);var i=[{x:t,y:e,mode:"lines+markers"}];Plotly.animate(o,{data:i,traces:[0]},{transition:{duration:50,easing:"cubic-in-out"},frame:{duration:50}})}animateMesh(t,e,o){this.plotInitialized_Mesh||(this.plotMesh([0],[0],[0],o),this.plotInitialized_Mesh=!0);var i,a=[],r=[];i=e(t).tolist(),t=t.tolist();for(var l=0;l<t.length;l++)a.push(t[l][0]),r.push(t[l][1]);var n=[{x:a,y:r,z:i,mode:"markers",type:"scatter3d",marker:{color:"rgb(255, 0, 0)",size:5}}],s={autosize:!1,width:500,height:500};Plotly.animate(o,{data:n,traces:[0],layout:s},{transition:{duration:50,easing:"cubic-in-out"},frame:{duration:50}},s)}plotSurface(t,e){this.documentCreateElement(e);var o=[];t.forEach(t=>o.push(t));var i={z:o,type:"surface",contours:{z:{show:!0,usecolormap:!0,highlightcolor:"#42f462",project:{z:!0}}}};Plotly.newPlot(e,[i],{title:"Mt Bruno Elevation With Projected Contours",scene:{camera:{eye:{x:1.87,y:.88,z:-.64}},xaxis:{title:"#Foods"},yaxis:{title:"#Iteration"},zaxis:{title:"Objective Function"}},autosize:!1,width:500,height:500,margin:{l:65,r:50,b:65,t:90}})}plotTable(t,e,o){this.documentCreateElement(o);var i=e(t).tolist();t=t.tolist();var a=[],r=[];t.forEach(t=>{a.push(t[0]),r.push(t[1])});var l=[];l.push(a),l.push(r),l.push(i);var n=[{type:"table",columnwidth:[250,250,250],columnorder:[0,1,2,3],header:{values:["FoodsX","FoodsY","Solution"],align:"center",line:{width:1,color:"rgb(50, 50, 50)"},fill:{color:["rgb(235, 100, 230)"]},font:{family:"Arial",size:11,color:"white"}},cells:{values:l,align:["center","center"],line:{color:"black",width:1},fill:{color:["rgb(235, 193, 238)","rgba(228, 222, 249, 0.65)"]},font:{family:"Arial",size:10,color:["black"]}},xaxis:"x",yaxis:"y",domain:{x:[0,.4],y:[0,1]}}];Plotly.newPlot(o,n,{title:"Solution Table",plot_bgcolor:"rgba(228, 222, 249, 0.65)",showlegend:!1})}plotInitialize(){this.plotLine()}PlotlyAnimate(t,e){var o,i=[],a=[];o=e(t).tolist(),t=t.tolist();for(var r=0;r<t.length;r++)i.push(t[r][0]),a.push(t[r][1]);var l=[{x:i,y:a,z:o,mode:"markers",type:"scatter3d",marker:{color:"rgb(255, 0, 0)",size:5}}],n={autosize:!1,width:500,height:500};Plotly.animate("myDiv",{data:l,traces:[0],layout:n},{transition:{duration:50,easing:"cubic-in-out"},frame:{duration:50}},n);l=[{x:this.iterationnumber,y:this.GlobalMinIteration_p,type:"scatter"}];Plotly.animate("myDiv2",{data:l,traces:[0],layout:n},{transition:{duration:50,easing:"cubic-in-out"},frame:{duration:50}},n)}}var plot=new PlotlyClass;class ABC{constructor(t,e,o,i,a,r){this.NP=t,this.FoodNumber=e,this.limit=o,this.maxCycle=i,this.D=a,this.runtime=r,this.GlobalMins=nj.zeros([1,this.runtime]).flatten(),console.log(this.NP,this.FoodNumber,this.limit,this.maxCycle,this.D,this.runtime),this.iterationnumber=[],this.GlobalMinAllIteration=[],this.FoodsAllIteration=[],this.ObjAllIteration=[]}run(t=!1){for(var e=nj.ones([1,this.D]).multiply(100),o=nj.ones([1,this.D]).multiply(-100),i=this.D,a=0;a<this.runtime;a++){for(var r=e.subtract(o).flatten(),l=this.FoodNumber,n=this.repmat(r,l),s=this.repmat(o.flatten(),l),u=nj.random([l,i]).multiply(n).add(s),h=this.objfun(u),c=this.calculateFitness(h),m=nj.zeros([1,l]).reshape(-1),d=Math.min(...h.tolist()),p=h.tolist().indexOf(d),y=d,f=[],g=0;g<i;g++)f.push(u.get(p,g));f=nj.array(f);for(var b=0;b<=this.maxCycle;){for(g=0;g<l-1;g++){for(var v=Math.floor(Math.random()*i),M=Math.floor(Math.random()*l);M===g;)M=Math.floor(Math.random()*l);for(var j=[],x=0;x<i;x++)j.push(u.get(g,x));j[v]=u.get(g,v)+(u.get(g,v)-u.get(M,v))*(Math.random()-.5)*2,j.forEach((t,i)=>{t<o.get(0,i)?j[i]=o.get(0,i):t>e.get(0,i)&&(j[i]=e.get(0,i))});var z=this.objfun(nj.array(j).reshape(1,i)),I=this.calculateFitness(z);if(I.get(0)>c.get(g)){for(var C=0;C<i;C++)u.set(g,C,j[C]);c.set(g,I.get(0)),h.set(g,z.get(0)),m.set(g,0)}else m.set(g,m.get(g)+1)}for(var w=c.divide(Math.max(...c.tolist())).multiply(.9).add(.1),P=(g=0,0);P<l;){if(Math.random()<w.get(0)){P+=1;for(v=Math.floor(Math.random()*i),M=Math.floor(Math.random()*l);M===g;)M=Math.floor(Math.random()*l);for(j=[],x=0;x<i;x++)j.push(u.get(g,x));if(j[v]=u.get(g,v)+(u.get(g,v)-u.get(M,v))*(Math.random()-.5)*2,j.forEach((t,i)=>{t<o.get(0,i)?j[i]=o.get(0,i):t>e.get(0,i)&&(j[i]=e.get(0,i))}),z=this.objfun(nj.array(j).reshape(1,i)),(I=this.calculateFitness(z)).get(0)>c.get(g)){for(C=0;C<i;C++)u.set(g,C,j[C]);c.set(g,I.get(0)),h.set(g,z.get(0)),m.set(g,0)}else m.set(g,m.get(g)+1)}(g+=1)===l&&(g=1)}d=Math.min(...h.tolist()),p=h.tolist().indexOf(d);if(h.tolist()[p]<y){y=d,f=[];for(g=0;g<i;g++)f.push(u.get(p,g));f=nj.array(f)}var A=Math.max(...m.tolist()),D=m.tolist().indexOf(A);if(m.get(D)>this.limit){m.set(D,0),j=e.subtract(o).flatten().multiply(nj.random([1,i]).flatten()).add(o.flatten()).tolist(),z=objfun(nj.array(j).reshape(1,i)),I=calculateFitness(z);for(C=0;C<i;C++)u.set(D,C,j[C]);c.set(D,I.get(0)),h.set(D,z.get(0))}console.log("Iter",b,y),b+=1,this.iterationnumber.push(b),this.GlobalMinAllIteration.push(y),this.FoodsAllIteration.push(u),this.ObjAllIteration.push(this.objfun(u).tolist()),t&&plot.animateMesh(u,this.objfun,"mvdiv10")}plot.plotLine([0,1,2,3,4,5,6,6,7,8,9],this.GlobalMinAllIteration,"myDiv5"),plot.plotSurface(this.ObjAllIteration,"myDiv6"),plot.plotTable(u,this.objfun,"myDiv7"),this.GlobalMins.set(a,y)}}calculateFitness(t){var e=[];return(t=t.tolist()).forEach(t=>{t>=0?e.push(1/(t+1)):e.push(1+Math.abs(t))}),nj.array(e)}repmat(t,e){for(var o=[],i=0;i<e;i++)o.push(t);return nj.stack(o)}objfun(t){var e=t.multiply(t);e=e.T;for(var o=[],i=0;i<e.shape[1];i++){for(var a=0,r=0;r<e.shape[0];r++)a+=e.get(r,i);o.push(a)}return nj.array(o)}}var ABCRunner_Button=document.querySelector(".ionic-menu-button");function play_single_sound(){document.getElementById("audiotag1").play()}function openMenu(){menuController.open(),console.log("Menu is open")}function ABCRunner(){console.log("Code.js script");var t=Number(document.querySelector("#colonySizeID").value),e=Number(document.querySelector("#foodNumberID").value),o=Number(document.querySelector("#limitID").value),i=Number(document.querySelector("#maxCycleID").value),a=Number(document.querySelector("#dimensionID").value),r=Number(document.querySelector("#runTimeID").value);t||(t=20),e||(e=t/2),o||(o=100),i||(i=10),a||(a=2),r||(r=1);var l=document.querySelector("#animationID").checked;new ABC(t,e,o,i,a,r).run(l)}ABCRunner_Button.addEventListener("click",ABCRunner),play_single_sound();